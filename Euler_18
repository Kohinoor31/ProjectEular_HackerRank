import java.util.Scanner;

public class TriangleMaxPathSum {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int T = scanner.nextInt(); // Number of test cases

        while (T-- > 0) {
            int N = scanner.nextInt(); // Number of rows in the triangle
            int[][] triangle = new int[N][N];

            // Read input into the triangle matrix
            for (int i = 0; i < N; i++) {
                for (int j = 0; j <= i; j++) {
                    triangle[i][j] = scanner.nextInt();
                }
            }

            // Bottom-up DP approach
            for (int i = N - 2; i >= 0; i--) { // Start from second-last row
                for (int j = 0; j <= i; j++) {
                    triangle[i][j] += Math.max(triangle[i + 1][j], triangle[i + 1][j + 1]);
                }
            }

            // The answer is stored at the top of the triangle
            System.out.println(triangle[0][0]);
        }

        scanner.close();
    }
}
